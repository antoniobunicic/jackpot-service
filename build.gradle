plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.openapi.generator' version '7.12.0'
}

group = 'hr.vreva'
version = '0.0.1-SNAPSHOT'
description = 'jackpot-service'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.27'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
    implementation 'org.flywaydb:flyway-core'
    runtimeOnly 'com.h2database:h2'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.testcontainers:testcontainers:1.20.4'
    testImplementation 'org.testcontainers:junit-jupiter:1.20.4'
    testImplementation 'org.testcontainers:kafka:1.20.4'
    testImplementation 'org.awaitility:awaitility:4.2.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// OpenAPI Generator configuration
openApiGenerate {
    generatorName = "spring"
    inputSpec = "$projectDir/src/main/resources/openapi/jackpot-api.yaml".toString()
    outputDir = "$buildDir/generated".toString()
    apiPackage = "hr.vreva.jackpotservice.generated.api"
    modelPackage = "hr.vreva.jackpotservice.generated.model"
    configOptions = [
            dateLibrary: "java8",
            interfaceOnly: "true",
            skipDefaultInterface: "true",
            useTags: "true",
            useSpringBoot3: "true",
            documentationProvider: "none",
            hideGenerationTimestamp: "true"
    ]
}

// Add generated sources to compile path
sourceSets {
    main {
        java {
            srcDir "$buildDir/generated/src/main/java"
        }
    }
    integrationTest {
        java {
            srcDir 'src/integrationTest/java'
        }
        resources {
            srcDir 'src/integrationTest/resources'
        }
        compileClasspath += sourceSets.main.output + sourceSets.test.output
        runtimeClasspath += sourceSets.main.output + sourceSets.test.output
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

task integrationTest(type: Test) {
    description = 'Runs integration tests.'
    group = 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    shouldRunAfter test
}

check.dependsOn integrationTest

// Generate API before compiling
compileJava.dependsOn tasks.openApiGenerate

tasks.named('test') {
    useJUnitPlatform()
}
